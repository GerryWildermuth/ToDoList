package com.practice.todolist.controller;

import com.practice.todolist.model.Todolist;
import com.practice.todolist.controller.dto.TodolistDTO;
import com.practice.todolist.service.TodolistService;
import com.practice.todolist.service.mapper.TodolistMapper;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

/**
* Generated by Springboot-3layer-Generator at 28.05.2021, 19:11:26
*/
@RestController
@RequestMapping("/todolist-dto/")
public class TodolistControllerDTO implements CrudController<TodolistDTO,Integer>{

    @Autowired
    private TodolistService service;

    private TodolistMapper mapper;

    @Override
    public ResponseEntity<TodolistDTO> create(@RequestBody TodolistDTO dto) {
       Todolist entity = mapper.toEntity(dto);
       entity = service.create(entity);
       return ResponseEntity.ok(mapper.toDto(entity));
    }

    @Override
    public ResponseEntity<TodolistDTO> update(@RequestBody TodolistDTO dto) {
      Todolist entity = mapper.toEntity(dto);
       entity = service.update(entity);
       return ResponseEntity.ok(mapper.toDto(entity));
    }

    @Override
    public ResponseEntity<Page<TodolistDTO>> read(
            @RequestBody TodolistDTO dto,
            @RequestParam("page") Integer page,
            @RequestParam("size") Integer size) {
        Pageable pageable = PageRequest.of(page,size);
        Todolist entity = mapper.toEntity(dto);
        Page<TodolistDTO> pages = service.read(entity, pageable).map(mapper::toDto);
        return ResponseEntity.ok(pages);
    }

    @Override
    public ResponseEntity<TodolistDTO> readOne(@PathVariable("id") Integer primaryKey) {
         Todolist entity = service.readOne(primaryKey);
         return ResponseEntity.ok(mapper.toDto(entity));
    }

    @Override
    public void delete(Integer primaryKey) {
        service.delete(primaryKey);
    }
}